---
- name: install python dependencies
  include_tasks: python-ecosystem.{{ ansible_os_family }}.yml

- name: install pyenv via installer
  block:
    - name: fetch installer
      get_url:
        url: https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
        dest: /tmp/pyenv_installer.sh
        mode: "0755"

    - name: set installation facts
      stat:
        path: "{{ ansible_env.HOME }}/.pyenv"
      register: pyenv_exists

    - name: install
      command: bash -c /tmp/pyenv_installer.sh
      when:
        - not pyenv_exists.stat.exists
      args:
        creates:
          - "{{ ansible_env.HOME }}/.pyenv"
          - "{{ ansible_env.HOME }}/.pyenv/plugins/pyenv-doctor"
          - "{{ ansible_env.HOME }}/.pyenv/plugins/pyenv-update"
          - "{{ ansible_env.HOME }}/.pyenv/plugins/pyenv-virtualenv"
          - "{{ ansible_env.HOME }}/.pyenv/plugins/python-build"

    - name: pyenv zsh config
      copy:
        src: python-pyenv.zsh
        dest: "{{ ansible_env.HOME }}/.zsh.after/python-pyenv.zsh"
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"

- name: pyenv update
  command: "{{ ansible_env.HOME }}/.pyenv/bin/pyenv update"
  environment:
    PYENV_ROOT: "{{ ansible_env.HOME }}/.pyenv"
  args:
    creates: "{{ ansible_env.HOME }}/.pyenv/plugins/python-build/share/python-build/{{ lv }}"
  loop: "{{ python_versions | flatten(levels=1) }}"
  loop_control:
    loop_var: lv

- name: pyenv install our versions
  command: "{{ ansible_env.HOME }}/.pyenv/bin/pyenv install {{ lv }}"
  environment:
    PYENV_ROOT: "{{ ansible_env.HOME }}/.pyenv"
  args:
    creates: "{{ ansible_env.HOME }}/.pyenv/versions/{{ lv }}"
  loop: "{{ python_versions | flatten(levels=1) }}"
  loop_control:
    loop_var: lv

- name: pyenv make global version  # noqa 301 does not create a file
  command: "{{ ansible_env.HOME }}/.pyenv/bin/pyenv global {{ python_global_version }}"
  environment:
    PYENV_ROOT: "{{ ansible_env.HOME }}/.pyenv"
